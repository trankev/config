[core]

  editor = vim
  autocrlf = input
  whitespace = trailing-spaces,space-before-tab
  excludesfile = ~/.gitignore
  sharedRepository = group
  # pager = /usr/share/git/diff-highlight/diff-highlight | less -rx1,5

[color]
  branch=auto
  diff=auto
  interactive=auto
  status=auto

[format]
  pretty=oneline # display one line per log entry

[alias]
  st = status --short --branch
  ci = commit
  cia = commit --amend --no-edit
  co = checkout
  cl = clone
  br = branch -avv --format='%(color:red)%(objectname:short)%(color:reset) %(color:yellow)%(refname:short)%(color:reset) %(contents:subject) (%(color:green)%(committerdate:relative) by %(authorname)%(color:reset))'
  tags = log --oneline --decorate --tags --no-walk



  difff = diff --staged
  ad = add -A
  addd = add --patch
  pushf = push --force-with-lease
  sub = submodule
  subup = submodule update --init --recursive
  subpull = submodule foreach git pull origin master --recurse-submodules=yes
  subco = submodule foreach git checkout master
  lg = log -n 15 --abbrev-commit --no-merges
  lgg = log --graph --pretty=format:'%Cred%h%Creset %s%Cred%d%Creset %Cgreen(%cr by %cN)%Creset'
  re = remote -vv
  amend = commit --amend -C HEAD
  rc = rebase --continue
  rs = rebase --skip
  ra = rebase --abort
  stsh = stash --keep-index
  staash = stash --include-untracked
  showf = show --format=fuller
  refl = log -g --pretty=fuller

[user]
  logallrefupdates = true

[help]
  autocorrect = 1

[diff]
  renames = copies # detects file moving and copying
  mnemonicprefix = true
  submodule = log

[branch]
  autosetupmerge = always # auto track remote branch
  autosetuprebase = always # force new branches to setup rebase
  
[push]
  default = simple
  followTags = true

[rerere]
  enabled = true # record resolved conflicts hunks

[fetch]
  recurseSubmodules = true
  prune = true # remove deleted branches

[http]
  sslVerify = false

[pull]
	rebase = merges

[rebase]
  autosquash = true
  autostash = true

[include]
  path = .gitspecifics

[merge]
  tool = vimdiff

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
[submodule]
	recurse = true

[commit]
	template = /home/ktran/.gitmessage

[init]
	defaultBranch = main
